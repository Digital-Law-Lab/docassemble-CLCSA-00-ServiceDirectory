---
include:
  - CLCSA_Questions.yml
  - CLCSA_List_of_Services.yml
  - CLCSA_List_of_Services_Code.yml
---
metadata:
  title: |
    CLCSA Service Directory
  short title: |
    CLCSA
  authors:
    - name: Shae Smith
    - name: Jessica Phuong-Rafferty
    - name: Mattea Romano
    - name: Andjela Jovic
    - name: Zahraa Alwan
  organisation: Flinders University
  show login: False
  footer: |
    <div style="display: flex;align-items: flex-start;justify-content: center;font-size: 12px;height: 100%;padding: 10px;">
      <div style=" display: flex; height: 100%; align-items: center; line-height: 18px;" class="flindersAttribution">
        Developed by Flinders University in collaboration with Community Legal Centres South Australia (CLCSA)
      </div>
      <div style="height: 40px; display: flex; margin-left: 15px;" class="flindersLogo">
        <img src="https://staff.flinders.edu.au/etc.clientlibs/flinders/clientlibs/clientlib-site/resources/images/flinderuni_main_logo_black.png" style="height: 100%;">
      </div>
    </div>
  exit label: ""
  navigation bar html: |
    <!-- Adds title to logo -->
    <span id="apptitle" class="nav navbar-nav d-none d-md-block">CLCSA Service Directory</span>
    <script>
      apptitle = document.getElementById('apptitle');
      nbc = document.getElementById('danavbar-collapse');
      nbc.insertAdjacentElement('beforeBegin', apptitle);
    </script>

    <!-- Adds Safe Exit button 
    <a id="escape" href="https://www.google.com" class="btn btn-warning btn-da">Safe Exit</a>
    <script>

      // Can't use `let` in here as it exists on the page
      // multiple times. Could put it in a namespace, I
      // suppose.
      // To shorten this code, find a way to access jQuery
      
      var doc = document;  // Need space!

      var outer = outer || doc.createElement( 'div' );
      var inner = inner || doc.createElement( 'div' );
      outer.appendChild( inner );

      outer.setAttribute( 'class', 'escape-outer' );
      inner.setAttribute( 'class', 'escape-inner' );

      // Give a unique id to each escaper so we can add only
      // one per outer/inner pair
      var suffix = suffix || 1;  // Use `suffix` if it already exists
      var unique_id = 'escaper_' + suffix;
      var escaper = doc.getElementById( 'escape' );
      escaper.setAttribute( 'id', unique_id );
      inner.appendChild( escaper );
      
      if (suffix !== 1) {
        escaper.classList.add( 'escape-overlap' );
      }
      suffix += 1;
      
      // Add to navbar
      var after = doc.getElementById('danavbar-collapse');
      after.insertAdjacentElement('afterEnd', inner);
    </script>
    
    <style>
      .escape-inner {
        position: relative;
        margin-left: .4em;
      }
    
      #escaper_2, .escape-overlap {
        position: absolute;
        top: 0;
        left: 0;
      }
      
      .escape {
        margin: 0;
      }
      
      @media only screen and (max-width: 30em) {
        .navbar-brand {
          margin-right: .3rem;
        }
        
        #dapagetitle {
          margin-right: .4em;
        }
        
        #dapagetitle .ma_icon {
          margin-right: 0;
        }
        
        .escape-inner {
          margin-left: .6em;
        }
        
        #dahelptoggle {
          padding: 0;
        }
      }
    </style>
---
objects:
  - CLCSAlogo: DAStaticFile.using(filename='CLCSAlogo_nowords.png')
---
features:
  css:
    - CLCSA_CSS_Website.css
    - custom-f2ddd4f8.css
  javascript:
    - custom-f2ddd3f2.js
  debug: False
  hide standard menu: False
  progress bar: True
  show progress bar percentage: True
  navigation back button: True
---
mandatory: True
code: |
  set_parts(logo='<img src="' + CLCSAlogo.url_for() + '" style="height: 60px;">')
---
# This code block is to insert a logo and text into the navbar
code: |
  logoString = """
    <div class="media">
      <div>
        <img src="{}" class="mr-3" height="50">
      </div>
      <div class=logotext>
        CLCSA Service Directory 4
      </div>
    </div>
  """.format(CLCSAlogo.url_for())
  set_parts(logo=logoString)
---
# Welcome screen
mandatory: true
question: How to Get Help
subquestion: |
  Welcome to the CLCSA Service Directory.
  Use this app to find the legal services that you need.

  You must agree to the Terms of Use to continue
  <hr>

  <div class="disclaimer_heading">Terms of Use</div>
  <p class="disclaimer_text">
  This application does not provide you with legal advice, nor should you consider
  any legal service recommended by this application as an endorsement of that service.
  Please call and make your own enquiries to ensure the service is suitable for you.
  </p>
  <p class="disclaimer_text">
  This application may ask some personal questions, such as the type of legal issue
  you are encountering and questions about your identity, background and where you 
  live.  We do not store or use any of this information.  Once you exit this app
  your personal information is deleted.
  </p>
  <p class="disclaimer_text">
  You should only continue if you agree to these terms.
  </p>
  <hr>
  
buttons:  
  - I agree: continue
  - No thanks: exit
    url: http://www.bom.gov.au/sa/forecasts/adelaide.shtml

---
# Final Screen
mandatory: true
question: Thank you for completing this application. Here are your responses,
subquestion: |

  Questions                           |Answers
  ------------------------------------|--------
  Location                            | ${display_CLCSAlocation}
  Legal Issue                         | ${display_CLCSAlegalissue}
  Gender                              | ${CLCSAgender}
  Aboriginal or Torres Strait Islander| ${CLCSAindigenous}

  #### Here are the list of services:
  <hr>

  % if len(CLCSAdisplay_specific_gender) > 0:
  #### Gender-specific services:

  ${CLCSAdisplay_gender_list}
  %endif

  % if len(CLCSAdisplay_indigenous) > 0:
  #### Services for Aboriginal and Torres Strait Islander people:

  ${CLCSAdisplay_indigenous_list}
  % endif

  % if len(CLCSAdisplay_leftovers) > 0:
  #### General Services:

  ${CLCSAdisplay_leftover_list}
  % endif

progress: 100
buttons:
  - Exit: exit
    url: http://www.bom.gov.au/sa/forecasts/adelaide.shtml
  - Restart: restart
---
# Table Block
table: CLCSAdisplay_gender_list
rows: CLCSAdisplay_specific_gender
columns:
  - Name of Service: |
      row_item['name']
  - Address: |
      row_item['display address']
  - Phone: |
      row_item['display phone']
  - This service specialises in: |
      row_item['display legal issue']
---
table: CLCSAdisplay_indigenous_list
rows: CLCSAdisplay_indigenous

columns:
  - Name of Service: |
      row_item['name']
  - Address: |
      row_item['display address']
  - Phone: |
      row_item['display phone']
  - This service specialises in: |
      row_item['display legal issue']
---
table: CLCSAdisplay_leftover_list
rows: CLCSAdisplay_leftovers
columns:
  - Name of Service: |
      row_item['name']
  - Address: |
      row_item['display address']
  - Phone: |
      row_item['display phone']
  - This service specialises in: |
      row_item['display legal issue']
---
# Display legal issue as a bullet list.  If there
# is only one issue, then don't have a single
# bullet list.
# We construct the bullet list by creating a string
# of HTML commands (markdown doesn't work in code I
# just found out this morning :-)
# We save our bullet list to display in a key called
# 'display legal issue' and we use that in our table.
code: |
  # Initialise the display with an empty string.  We'll use
  # a temp variable here because it's easier to read
  # The '<ul>' and '<li>' tags that you see are HTML commands
  # to make a bullet list.  
  CLCSAtemp_list = '<ul>'

  # Now add each item to the string as a markdown bullet list item
  for an_issue in CLCSA_Services[i]['legal issue']:
    if an_issue == 'Other':
      an_issue = 'General Services'
    CLCSAtemp_list = '{}<li>{}</li>'.format(CLCSAtemp_list, an_issue)

  CLCSAtemp_list = '{}</ul>'.format(CLCSAtemp_list)
  # Now we've added each item, we can assign the temp variable
  # to the 'real' variable we want displayed
  CLCSA_Services[i]['display legal issue'] = CLCSAtemp_list
---
# Display locations as a bullet list.
# I haven't put as many comments in here just in case all the
# comments are confusing
code: |
  CLCSAtemp_list = '<ul>'

  for an_issue in CLCSA_Services[i]['location']:
    CLCSAtemp_list = '{}<li>{}</li>\n'.format(CLCSAtemp_list, an_issue)
  CLCSAtemp_list = '{}</ul>'.format(CLCSAtemp_list)
  CLCSA_Services[i]['display location'] = CLCSAtemp_list
---
# This code does something similar but it works on the
# CLCSAlegalissue checkbox instead of the data structure
code: |
  CLCSAtemp_list = '<ul>'
  for an_issue in CLCSAlegalissue.true_values():
    if an_issue == 'Other':
      an_issue = 'General Services'
    CLCSAtemp_list = '{}<li>{}</li>'.format(CLCSAtemp_list, an_issue)

  CLCSAtemp_list = '{}</ul>'.format(CLCSAtemp_list)
  display_CLCSAlegalissue = CLCSAtemp_list
---
# Bullet list code for location in checkbox - it works!
code: |
  CLCSAtemp_list = '<ul>'
  for an_issue in CLCSAlocation.true_values():
    CLCSAtemp_list = '{}<li>{}</li>'.format(CLCSAtemp_list, an_issue)

  CLCSAtemp_list = '{}</ul>'.format(CLCSAtemp_list)
  display_CLCSAlocation = CLCSAtemp_list
---
# Bullet list for phone numbers - it works!
code: |
  CLCSAtemp_list = '<ul>'  

  for an_issue in CLCSA_Services[i]['phone']:
    CLCSAtemp_list = '{}<li>{}</li>\n'.format(CLCSAtemp_list, an_issue)
  CLCSAtemp_list = '{}</ul>'.format(CLCSAtemp_list)
  CLCSA_Services[i]['display phone'] = CLCSAtemp_list
---
# Bullet list for address - it works!
code: |
  CLCSAtemp_list = '<ul>'  

  for an_issue in CLCSA_Services[i]['address']:
    CLCSAtemp_list = '{}<li>{}</li>\n'.format(CLCSAtemp_list, an_issue)
  CLCSAtemp_list = '{}</ul>'.format(CLCSAtemp_list)
  CLCSA_Services[i]['display address'] = CLCSAtemp_list
---

